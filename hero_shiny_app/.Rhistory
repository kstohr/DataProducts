hero2[Superhero=="The.Hulk",]$Power<-"Strength"
hero2[Superhero=="The.Hulk",]$Creative<-0
hero2[Superhero=="The.Hulk",]$Introverted<-1
hero2[Superhero=="The.Hulk",]$Agreeable<-0
hero2[Superhero=="The.Hulk",]$DoGooder<-0
hero2[Superhero=="The.Hulk",]$Strength<-1
hero2[Superhero=="Superman",]$Power<-"Flight"
hero2[Superhero=="Superman",]$Creative<-0
hero2[Superhero=="Superman",]$Introverted<-0
hero2[Superhero=="Superman",]$Agreeable<-1
hero2[Superhero=="Superman",]$DoGooder<-1
hero2[Superhero=="Superman",]$Strength<-1
hero2[Superhero=="Thor",]$Power<-"Strength"
hero2[Superhero=="Thor",]$Creative<-0
hero2[Superhero=="Thor",]$Introverted<-0
hero2[Superhero=="Thor",]$Agreeable<-0
hero2[Superhero=="Thor",]$DoGooder<-1
hero2[Superhero=="Thor",]$Strength<-1
hero2[Superhero=="Spiderman",]$Power<-"Flight"
hero2[Superhero=="Spiderman",]$Creative<-1
hero2[Superhero=="Spiderman",]$Introverted<-1
hero2[Superhero=="Spiderman",]$Agreeable<-0
hero2[Superhero=="Spiderman",]$DoGooder<-0
hero2[Superhero=="Spiderman",]$Strength<-0
hero2$Power<-as.factor(hero2$Power)
dim(hero2)
sum(is.na(hero2))
```{r}
set.seed(223) #sets the seed
## create training and testing set
inTrain<-createDataPartition(hero2$Superhero,p=0.6,list=FALSE) ##training set to 60% for medium sized data sets.
training<-hero2[inTrain,]
testing<-hero2[-inTrain,]
model2 <- train(Superhero ~ ., data=training, trControl=ctrl, method="rf") ## fit model with random forests
#check important variables
imp_var<-varImp(model2)
imp_var
prediction <- predict(model2, newdata=training)
acc_test<-sum(prediction == training$Superhero) / length(prediction)
confusionMatrix(training$Superhero, prediction)$table
confusionMatrix(training$Superhero, prediction)$overall
hero3<-subset(hero2, select=c("Age", "Parental.Status", "Gender", "Movies.Future.Year", "Merch.Future.Year", "Superhero", "Power", "Creative", "Introverted", "Agreeable", "DoGooder", "Strength"))
sum(is.na(hero3))
set.seed(223) #sets the seed
## create training and testing set
inTrain<-createDataPartition(hero3$Superhero,p=0.6,list=FALSE) ##training set to 60% for medium sized data sets.
training<-hero3[inTrain,]
testing<-hero3[-inTrain,]
model3 <- train(Superhero ~ ., data=training, trControl=ctrl, method="rf") ## fit model with random forests
#check important variables
imp_var<-varImp(model2)
imp_var
prediction <- predict(model3, newdata=training)
acc_test<-sum(prediction == training$Superhero) / length(prediction)
confusionMatrix(training$Superhero, prediction)$table
confusionMatrix(training$Superhero, prediction)$overall
prediction <- predict(model3, newdata=testing)
acc_test<-sum(prediction == testing$Superhero) / length(prediction)
confusionMatrix(testing$Superhero, prediction)$table
confusionMatrix(testing$Superhero, prediction)$overall
hero4<-cbind(hero3, Id=msub$Id, Date=msub$Date) #add back in date and ID
setwd("~/Documents/Coursera/Data Products/project/hero_shiny_app/data")
write.csv(hero4, file="hero.csv")
sum(is.na(hero4))
test<-read.csv("~/Documents/Coursera/Data Products/project/hero_shiny_app/data")
test<-read.csv(file="~/Documents/Coursera/Data Products/project/hero_shiny_app/data")
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined")
setwd("~/Documents/Coursera/Data Products/project/hero_shiny_app")
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined")
View(favhero)
sum(is.na(favhero))
favhero<-select(favhero, -1) ## take out extra rowname row
View(favhero)
sum(is.na(favhero))
shiny::runApp()
shiny::runApp()
guess<-NULL
Superhero<-NULL
Superhero
names(favhero)
shiny::runApp()
selectedData<-as.data.frame(cbind(
Age=input$age,
Parental.Status=input$parental.status,
Gender=input$gender,
Movies.Future.Year=input$movies.future,
Merch.Future.Year=input$merch.future,
Superhero=NULL,
Power=input$power,
Creative=input$creativity,
Introverted=input$introverted,
Agreeable=input$agreeable,
DoGooder=input$dogooder,
Strength=input$strength,
Id=sum(Id+1)),
Date=date())
selectedData<-as.data.frame(cbind(
Age=25,
Parental.Status=1,
Gender="Female")
)
View(selectedData)
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1)),
Date=date())
Id=001
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1)),
Date=date())
View(default)
date=date()
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1)),
Date=date))
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1)),
Date=date)
View(default)
thedate<-date()
today<-date()
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1)),
Date=today)
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero=NULL,
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1),
Date=today)
)
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero="",
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1),
Date=today)
)
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero="",
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1),
Date=dts)
)
dts<-date()
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="",
Merch.Future.Year="",
Superhero="",
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1),
Date=dts))
selectedData<-default
guess<-predict(model, newdata=selectedData)
ctrl <- trainControl(allowParallel=T, method="cv", number=4)
model<- train(Superhero ~ ., data=favhero[,1:12], trControl=ctrl, method="rf")
guess<-predict(model, newdata=selectedData)
selectedData$Movies.Future.Year
names(favhero$Movies.Future.Year)
levels(favhero$Movies.Future.Year)
default<-as.data.frame(cbind(
Age=25,
Parental.Status=0,
Gender="Female",
Movies.Future.Year="Neutral",
Merch.Future.Year="Neutral",
Superhero="",
Power="Flight",
Creative=0,
Introverted=0,
Agreeable=0,
DoGooder=0,
Strength=0,
Id=sum(Id+1),
Date=dts))
selectedData<-default
guess<-predict(model, newdata=selectedData)
sapply(hero4, class)
default<-as.data.frame(cbind(
as.integer(Age=25),
Parental.Status=0,
Gender="Female",
Movies.Future.Year="Neutral",
Merch.Future.Year="Neutral",
Superhero="",
Power="Flight",
as.numeric(Creative=0),
as.numeric(Introverted=0,
as.numeric(Agreeable=0),
as.numeric(DoGooder=0),
as.numeric(Strength=0),
as.integer(Id=sum(Id+1)),
as.factor(Date=dts)))
)
default<-as.data.frame(cbind(
as.integer(Age=25),
Parental.Status=0,
Gender="Female",
Movies.Future.Year="Neutral",
Merch.Future.Year="Neutral",
Superhero="",
Power="Flight",
as.numeric(Creative=0),
as.numeric(Introverted=0,
as.numeric(Agreeable=0),
as.numeric(DoGooder=0),
as.numeric(Strength=0),
as.integer(Id=sum(Id+1)),
as.factor(Date=dts)))
)
myclasses<-as.list(sapply(favhero,classes))
myclasses<-as.list(sapply(favhero,class))
myclasses
myclasses[1]
myclasses[[1]]
lenght(myclasses)
length(myclasses)
guess<-predict(model, newdata=selectedData[,1:12]
)
myclasses[1:12]
myclasses[[1:12]]
myclasses[2][1:12]
myclasses[1][1:12]
myclasses[1:12][1]
myclasses[1:12][2]
myclasses[2][2]
myclasses[1][2]
myclasses[1][1]
myclasses[[1]]
myclasses[[1:12]]
myclasses[[1]][1:12]
myclasses[1][[1]]
myclasses[1][[1:12]]
myclasses[1][[2]]
myclasses[[2]]
myclasses[[1]]
myclasses[[1:12]]
myclasses<-sapply(favhero, class)
myclasses
myclasses[2]
myclasses[[2]]
myclasses[[1:2]]
class(selectedData)<-myclasses
default<-favhero[118]
default<-favhero[,118]
default<-favhero[118,]
default<-as.data.frame(cbind(
Age="25",
Parental.Status=0,
Gender="Female",
Movies.Future.Year="Neutral",
Merch.Future.Year="Neutral",
Superhero="",
Power="Flight",
Creative="0",
Introverted="0",
Agreeable="0",
DoGooder="0",
Strength="0",
Id=sum(Id+1),
Date=dts))
selectedData<-default
guess<-predict(model, newdata=selectedData[,1:12])
unlist(myclasses)
test<-unlist(myclasses)
test
test[2]
unlist(test)
test<-unlist(sapply(favhero, class))
test
test<-as.list(sapply(favhero, class))
test
unlist(test)
class(test)
class(unlist(test))
unlist(test)
test2<-unlist(test)
test2
class(test2)
length(test2)
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined", header = TRUE)
View(favhero)
favhero<-select(favhero, -1) ## take out extra rowname row
View(favhero)
dim(favhero)
test<-sapply(hero4,class)
test2<-sapply(favhero,class)
identical(test,test2)
test
test2
test3(sapply(default, class))
test3<-(sapply(default, class))
test3
selectedData<-as.data.frame(cbind(
Age=as.integer(25),
Parental.Status=0,
Gender="Female",
Movies.Future.Year="Neutral",
Merch.Future.Year="Neutral",
Superhero="",
Power="Flight",
Creative="0",
Introverted="0",
Agreeable="0",
DoGooder="0",
Strength="0",
Id=sum(Id+1),
Date=dts))
test3<-(sapply(default, class))
test3
test3<-(sapply(selectedData, class))
test3
test2<-sapply(favhero,class)
default<-favhero[,1]
View(default)
default<-favhero[1,]
View(default)
selectedData$Age<-25
View(selectedData)
default<-favhero[1,]
default$Age<-25
View(default)
class(default$Age)
class(default$Parental.Status)
default<-favhero[1,]
default$Age<-25
default$Parental.Status<-0
default$Gender="Female"
default$Movies.Future.Year<-"Neutral"
default$Merch.Future.Year<-"Neutral"
default$Superhero<-""
default$Power<-"Flight"
default$Creative<-0
default$Introverted<-0
default$Agreeable<-0
default$DoGooder<-0
default$Strength<-0
default$Id=Id
default$Date=dts
View(default)
test<-sapply(favhero, class)
test2<-sapply(default,class)
identical(test,test2)
test
test2
shiny::runApp()
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined", header = TRUE)
favhero<-select(favhero, -1) ## take out extra rowname row
View(favhero)
attach(default)
Age=input$age
Age=33
View(default)
Age<-33
View(default)
shiny::runApp()
selectedData<-favhero[1,]
guess<-predict(model, newdata=selectedData[,1:12])
guess
shiny::runApp()
shiny::runApp()
shiny::runApp()
model<- train(Superhero ~ ., data=favhero[,1:12], trControl=ctrl, method="rf")
warnings()
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined", header = TRUE)
favhero<-select(favhero, -1) ## take out extra rowname row
ctrl <- trainControl(allowParallel=T, method="cv", number=4)
model<- train(Superhero ~ ., data=favhero[,1:12], trControl=ctrl, method="rf")
hero4<-cbind(hero3, Id=msub$Id, Date=msub$Date) #add back in date and ID
setwd("~/Documents/Coursera/Data Products/project/hero_shiny_app")
write.csv(hero4, file="data/hero.csv")
favhero<-select(favhero, -1) ## take out extra rowname row
ctrl <- trainControl(allowParallel=T, method="cv", number=4)
model<- train(Superhero ~ ., data=favhero[,1:12], trControl=ctrl, method="rf")
favhero <-read.csv("data/hero.csv", strip.white=T, na.strings="undefined", header = TRUE)
favhero<-select(favhero, -1) ## take out extra rowname row
ctrl <- trainControl(allowParallel=T, method="cv", number=4)
model<- train(Superhero ~ ., data=favhero[,1:12], trControl=ctrl, method="rf")
shiny::runApp()
shiny::runApp()
guess<-predict(model, newdata=selectedData[,1:12])
guess
class(guess)
as.character(guess)
shiny::runApp()
guess<-as.character(predict(model, newdata=selectedData[,1:12]))
guess
shiny::runApp()
shiny::runApp()
prediction<-as.character(predict(model, newdata=selectedData[,1:12]))
prediction
class(prediction)
default<-favhero[1,]
dts<-date()
iD<-sum(Id+1)
selectedData<-default
prediction<-as.character(predict(model, newdata=selectedData[,1:12]))
prediction
if(!is.null(guess)){
filename <- normalizePath(file.path('./www/images', paste(guess, '.jpg', sep='')))
}else{
filename <- normalizePath(file.path('./www/images', "default.jpg"))}
guess
input$age<-33
shiny::runApp()
view(selectedData)
View(selectedData)
shiny::runApp()
prediction<-predict(model, newdata=selectedData[,1:12])
class(prediction)
shiny::runApp()
prediction
shiny::runApp()
shiny::runApp()
tweet
shiny::runApp()
shiny::runApp()
